#
# autoconf input for Objective Caml programs
# Copyright (C) 2001 Jean-Christophe Filli√¢tre
#   from a first script by Georges Mariano 
# 
# This library is free software; you can redistribute it and/or
# modify it under the terms of the GNU Library General Public
# License version 2, as published by the Free Software Foundation.
# 
# This library is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
# 
# See the GNU Library General Public License version 2 for more details
# (enclosed in the file LGPL).

# the script generated by autoconf from this input will set the following
# variables:
#   OCAMLC        "ocamlc" if present in the path, or a failure
#                 or "ocamlc.opt" if present with same version number as ocamlc
#   OCAMLOPT      "ocamlopt" (or "ocamlopt.opt" if present), or a failure
#   OCAMLDEP      "ocamldep"
#   OCAMLDEP      "ocamldoc"
#   OCAMLLEX      "ocamllex" (or "ocamllex.opt" if present)
#   OCAMLYACC     "ocamlyac"
#   OCAMLLIB      the path to the ocaml standard library
#   OCAMLVERSION  the ocaml version number

AC_INIT([afg],[0.1])

AC_ARG_WITH(ocaml,
	[  --with-ocaml=<DIR>      Directory containing OCaml binaries],
	[OCAMLDIR="$withval"],
	[OCAMLDIR=no])

AC_ARG_WITH(curses,
	[  --with-curses=<DIR>      Directory containing CURSES library],
	[CURSES="$withval"],
	[CURSES=no])

AC_DEFUN(OFIND, [if test "$OCAMLDIR" = no ; then
		    AC_CHECK_PROG($1,$2,$2,no)
		 else
		    AC_CHECK_FILE([$OCAMLDIR/$2],[$1=$OCAMLDIR/$2],[$1=no])
		 fi])

# Find ocamlc
OFIND(OCAMLC,ocamlc)
if test "$OCAMLC" = no ; then
   AC_MSG_ERROR([Cannot find ocamlc.])
fi

# we extract Ocaml version number and library path
OCAMLVERSION=`$OCAMLC -v | sed -n -e 's|.*version *\(.*\)$|\1|p' `
echo "ocaml version is $OCAMLVERSION"
OCAMLLIB=`$OCAMLC -v | tail -1 | cut -f 4 -d " "`
echo "ocaml library path is $OCAMLLIB"

# then we look for ocamlopt; if not present, we issue a warning if the version
# is not the same, we also discard it we set OCAMLBEST to "opt" or "byte",
# whether ocamlopt is available or not
OFIND(OCAMLOPT,ocamlopt)
if test "$OCAMLOPT" = no ; then
   AC_MSG_ERROR(Cannot find ocamlopt.)

   AC_MSG_CHECKING(ocamlopt version)
   TMPVERSION=`$OCAMLOPT -v | sed -n -e 's|.*version *\(.*\)$|\1|p' `
   if test "$TMPVERSION" != "$OCAMLVERSION" ; then
      AC_MSG_RESULT(differs from ocamlc; ocamlopt discarded.)
   else
      AC_MSG_RESULT(ok)
   fi
fi

# checking for ocamlc.opt
OFIND(OCAMLCDOTOPT,ocamlc.opt,ocamlc.opt,no)
if test "$OCAMLCDOTOPT" != no ; then
	AC_MSG_CHECKING(ocamlc.opt version)
	TMPVERSION=`$OCAMLCDOTOPT -v | sed -n -e 's|.*version *\(.*\)$|\1|p' `
	if test "$TMPVERSION" != "$OCAMLVERSION" ; then
	    AC_MSG_RESULT(differs from ocamlc; ocamlc.opt discarded.)
	else
	    AC_MSG_RESULT(ok)
	    OCAMLC=$OCAMLCDOTOPT
	fi
fi

# checking for ocamlopt.opt
if test "$OCAMLOPT" != no ; then
    OFIND(OCAMLOPTDOTOPT,ocamlopt.opt)
    if test "$OCAMLOPTDOTOPT" != no ; then
	AC_MSG_CHECKING(ocamlc.opt version)
	TMPVER=`$OCAMLOPTDOTOPT -v | sed -n -e 's|.*version *\(.*\)$|\1|p' `
	if test "$TMPVER" != "$OCAMLVERSION" ; then
	    AC_MSG_RESULT(differs from ocamlc; ocamlopt.opt discarded.)
	else
	    AC_MSG_RESULT(ok)
	    OCAMLOPT=$OCAMLOPTDOTOPT
	fi
    fi
fi

# ocamldoc, ocamldep, ocamllex and ocamlyacc should also be present in the path
OFIND(OCAMLDOC,ocamldoc)
if test "$OCAMLDOC" = no ; then
   AC_MSG_ERROR(Cannot find ocamldoc.)
fi

OFIND(OCAMLDEP,ocamldep)
if test "$OCAMLDEP" = no ; then
    AC_MSG_WARN(Cannot find ocamldep.)
fi

OFIND(OCAMLLEX,ocamllex)
if test "$OCAMLLEX" = no ; then
    AC_MSG_ERROR(Cannot find ocamllex.)
else
    OFIND(OCAMLLEXDOTOPT,ocamllex.opt)
    if test "$OCAMLLEXDOTOPT" != no ; then
	OCAMLLEX=$OCAMLLEXDOTOPT
    fi
fi

OFIND(OCAMLYACC,ocamlyacc)
if test "$OCAMLYACC" = no ; then
	AC_MSG_ERROR(Cannot find ocamlyacc.)
fi

OFIND(OCAMLMKLIB,ocamlmklib)
if test "$OCAMLMKLIB" = no; then
   if test "$CBMC" = no; then
	AC_MSG_WARN(Cannot find ocamlmklib.)
   else
	AC_MSG_ERROR(Cannot find ocamlmklib.)
   fi
fi

# Check for CURSES
if test "$CURSES" = no ; then
   AC_CHECK_FILE([$OCAMLLIB/curses],
		 [CURSES=$OCAMLLIB/curses],
		 [CURSES=ocaml-curses])
fi

AC_SUBST(CURSES,$CURSES)
AC_SUBST(CBMC,$CBMC)

# Create Makefile.config from Makefile.config.in
AC_OUTPUT(Makefile.config)
chmod a-w Makefile.config
