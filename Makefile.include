# -*- mode: Makefile -*-

# This makefile gives general rules for building ocaml projects, as well as
# specific rules for building files that should be common to all top-level
# build targets in this project (specifically, for the user and test
# frontends).

# Before including this file, the following variables should be defined
#     ROOT: Relative path to the root directory of the project
#     EXTRA_SRC: Additional source files
#     EXTRA_DIRS: Additional directories to look for include files

include $(ROOT)/Makefile.config
include .depend

UTIL_FILES = util.ml colour.ml heap.ml log.ml rand.ml itree.ml
CORE_FILES = cmd.ml config.ml level.ml fov.ml actor.ml display.ml console.ml game.ml

SRC_DIR = $(ROOT)/src
CURSES = $(ROOT)/ocaml-curses

OTHER_DIRS = $(CURSES)
UNQUAL_SRC_DIRS = util

SRC_FILES = $(patsubst %, $(SRC_DIR)/util/%, $(UTIL_FILES)) \
	$(patsubst %, $(SRC_DIR)/%, $(CORE_FILES))

LIBS = unix.cmxa curses.cmxa

OFLAGS=$(INCLUDES)
LINK_FLAGS=$(OFLAGS) -cclib -lcurses

SRC_DIRS = $(SRC_DIR) $(patsubst %, $(SRC_DIR)/%, $(UNQUAL_SRC_DIRS))

# takes all tokens in the *DIRS variables and prepends -I to them
INCLUDES = $(patsubst %,-I %,$(OTHER_DIRS) $(SRC_DIRS))

SRC_MLL = $(filter %.mll,$(SRC_FILES))
SRC_MLY = $(filter %.mly,$(SRC_FILES))
SRC_ML = $(filter %.ml, $(patsubst %.mly, %.ml, $(SRC_FILES:.mll=.ml)))
SRC_MLI = $(filter %.mli,$(SRC_FILES))
OBJS_CMX = $(SRC_ML:.ml=.cmx)

EXTRA_ML = $(filter %.ml, $(patsubst %.mly, %.ml, $(EXTRA_SRC:.mll=.ml)))
SRC_ML_EXTRA = $(SRC_ML) $(EXTRA_ML)
SRC_MLI_EXTRA = $(SRC_MLI) $(filter %.mli,$(EXTRA_SRC))

GENERATED = $(SRC_MLL:.mll=.ml) $(SRC_MLY:.mly=.ml) $(SRC_MLL:.mly=.mli)

.SECONDARY: $(GENERATED)

depend: $(GENERATED)
	$(OCAMLDEP) -native $(OFLAGS) $(SRC_ML_EXTRA) $(SRC_MLI_EXTRA) > .depend

%.ml: %.mll
	$(OCAMLLEX) $<

%.ml: %.mly
	$(OCAMLYACC) $<

%.mli: %.mly
	$(OCAMLYACC) $<

%.cmi: %.mli
	$(OCAMLOPT) $(OFLAGS) -c $<

%.cmx: %.ml
	$(OCAMLOPT) $(OFLAGS) -c $<
