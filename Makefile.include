# -*- mode: Makefile -*-

# This makefile gives general rules for building ocaml projects, as well as
# specific rules for building files that should be common to all top-level
# build targets in this project (specifically, for the user and test
# frontends).

# Before including this file, the following variables should be defined
#     ROOT: Relative path to the root directory of the project
#     EXTRA_SRC: Additional source files
#     EXTRA_DIRS: Additional directories to look for include files

include $(ROOT)/Makefile.config
include .depend

UTIL_FILES = config.ml bitset.mli bitset.ml cdfautil.ml putil.ml log.ml	     \
	 enum.ml dynArray.ml monoid.ml order.ml enumeration.ml fastset.ml    \
	 fastset.mli disjointSet.ml evalLink.ml memo.ml datalog.ml kleene.ml \
	 regex.ml persistent.ml
CORE_FILES = core.ml core.mli accessPath.ml accessPath.mli expr.ml expr.mli \
	definition.ml definition.mli ast.ml ast.mli hlir.ml partialState.ml \
	afg.ml cfgIr.ml
MISC_FILES = dominator.ml
ANALYSIS_FILES = worklist.ml ai.ml aliasLogic.ml solve.ml live.ml	\
	 pointerAnalysis.ml dg.ml havocPropagation.ml inferFrames.ml	\
	 dependence.ml safety.ml
C_FE_FILES = instr.ml instr.mli assume.ml assume.mli translateCil.ml	\
	translateCil.mli
CBP_FE_FILES = cbpAst.ml cbpParse.mli cbpParse.mly cbpLex.mll translateCbp.ml
GOTO_FE_FILES = translateGoto.ml
FE_FILES = feConfig.ml
EXTRA_FILES = matt.ml baseConstant.ml logic.ml steens.ml aliasAnalysis.ml

SRC_DIR = $(ROOT)/src
CIL = $(ROOT)/cil/obj/x86_LINUX
OCAMLGRAPH = $(ROOT)/ocamlgraph
OUNIT_LIB = $(ROOT)/ounit

OTHER_DIRS = $(APRON) $(OCAMLGRAPH) $(CIL) $(OUNIT_LIB) $(EXTRA_DIRS)
UNQUAL_SRC_DIRS = util core misc analysis frontend frontend/c frontend/cbp temp

SRC_FILES = $(patsubst %, $(SRC_DIR)/util/%, $(UTIL_FILES)) \
	$(patsubst %, $(SRC_DIR)/core/%, $(CORE_FILES)) \
	$(patsubst %, $(SRC_DIR)/misc/%, $(MISC_FILES)) \
	$(patsubst %, $(SRC_DIR)/analysis/%, $(ANALYSIS_FILES)) \
	$(patsubst %, $(SRC_DIR)/frontend/c/%, $(C_FE_FILES)) \
	$(patsubst %, $(SRC_DIR)/frontend/cbp/%, $(CBP_FE_FILES)) \
	$(patsubst %, $(SRC_DIR)/temp/%, $(EXTRA_FILES))

LIBS = unix.cmxa str.cmxa bigarray.cmxa gmp.cmxa nums.cmxa cil.cmxa	\
       graph.cmx apron.cmxa boxMPQ.cmxa octD.cmxa polkaMPQ.cmxa

OFLAGS=$(INCLUDES)
LINK_FLAGS=$(OFLAGS)

# check for GOTO frontend
ifneq ($(CBMC), no)
UNQUAL_SRC_DIRS += frontend/goto
SRC_FILES += $(patsubst %, $(SRC_DIR)/frontend/goto/%, $(GOTO_FE_FILES))
OTHER_DIRS += $(ROOT)/goto
LIBS += goto.cmxa
LINK_FLAGS += -cclib -lstdc++
endif

SRC_FILES += $(patsubst %, $(SRC_DIR)/frontend/%, $(FE_FILES))

SRC_DIRS = $(patsubst %, $(SRC_DIR)/%, $(UNQUAL_SRC_DIRS))

# takes all tokens in the *DIRS variables and prepends -I to them
INCLUDES = $(patsubst %,-I %,$(OTHER_DIRS) $(SRC_DIRS))

SRC_MLL = $(filter %.mll,$(SRC_FILES))
SRC_MLY = $(filter %.mly,$(SRC_FILES))
SRC_ML = $(filter %.ml, $(patsubst %.mly, %.ml, $(SRC_FILES:.mll=.ml)))
SRC_MLI = $(filter %.mli,$(SRC_FILES))
OBJS_CMX = $(SRC_ML:.ml=.cmx)

EXTRA_ML = $(filter %.ml, $(patsubst %.mly, %.ml, $(EXTRA_SRC:.mll=.ml)))
SRC_ML_EXTRA = $(SRC_ML) $(EXTRA_ML)
SRC_MLI_EXTRA = $(SRC_MLI) $(filter %.mli,$(EXTRA_SRC))

GENERATED = $(SRC_MLL:.mll=.ml) $(SRC_MLY:.mly=.ml) $(SRC_MLL:.mly=.mli)

DOC=$(ROOT)/doc

.SECONDARY: $(GENERATED)

depend: $(GENERATED)
	$(OCAMLDEP) -native $(OFLAGS) $(SRC_ML_EXTRA) $(SRC_MLI_EXTRA) > .depend

%.ml: %.mll
	$(OCAMLLEX) $<

%.ml: %.mly
	$(OCAMLYACC) $<

%.mli: %.mly
	$(OCAMLYACC) $<

%.cmi: %.mli
	$(OCAMLOPT) $(OFLAGS) -c $<

%.cmx: %.ml
	$(OCAMLOPT) $(OFLAGS) -c $<
